import os
import time
import subprocess
import traceback
import requests
import webbrowser

import sys
print(f"Versi√≥n de Python: {sys.version}")



DOCKER_DESKTOP_PATH = r"C:\Program Files\Docker\Docker\Docker Desktop.exe"
PROJECT_DIR = r"C:\apppython\AFE"
APP_URL = "http://127.0.0.1:5000"

def log_error(message):
    """Guarda errores en un archivo de texto."""
    with open("error_log.txt", "a") as f:
        f.write(message + "\n")

def is_docker_ready():
    """Verifica si Docker est√° funcionando ejecutando `docker info`."""
    try:
        subprocess.run(["docker", "info"], stdout=subprocess.PIPE,
stderr=subprocess.PIPE, check=True)
        return True
    except subprocess.CalledProcessError:
        return False

def start_docker():
    """Inicia Docker Desktop si no est√° corriendo."""
    print("Verificando si Docker est√° en ejecuci√≥n...")
    if not is_docker_ready():
        print("Iniciando Docker Desktop...")
        os.startfile(DOCKER_DESKTOP_PATH)

        for i in range(30):
            if is_docker_ready():
                print("‚úÖ Docker est√° listo.")
                break
            print(f"‚åõ Esperando a que Docker arranque... ({i+1}/30)")
            time.sleep(10)
        else:
            log_error("Docker no se inici√≥ a tiempo.")
            print("‚ùå Docker no se inici√≥ en 5 minutos.")
            return
    else:
        print("‚úÖ Docker ya estaba en ejecuci√≥n.")

def start_docker_compose():
    """Ejecuta `docker compose up` en el directorio del proyecto."""
    print("üöÄ Ejecutando `docker compose up`...")
    try:
        subprocess.run(["docker", "compose", "up"], cwd=PROJECT_DIR,
shell=True, check=True)
        print("‚úÖ Docker Compose iniciado correctamente.")
    except subprocess.CalledProcessError as e:
        log_error(f"Error ejecutando Docker Compose: {str(e)}")
        print("‚ùå Error en Docker Compose. Revisa error_log.txt.")

def wait_for_app():
    """Espera hasta que la aplicaci√≥n en localhost:5000 est√© disponible."""
    print("‚åõ Esperando a que la aplicaci√≥n est√© disponible en localhost:5000...")

    for i in range(30):  # Espera hasta 5 minutos
        try:
            response = requests.get(APP_URL, timeout=2)
            if response.status_code == 200:
                print("‚úÖ Aplicaci√≥n disponible.")
                return True
        except requests.RequestException:
            pass
        print(f"‚åõ Intento {i+1}: La aplicaci√≥n a√∫n no responde...")
        time.sleep(10)

    print("‚ùå La aplicaci√≥n no respondi√≥ en 5 minutos.")
    return False

def open_browser():
    """Abre el navegador en localhost:5000."""
    print("üåç Abriendo el navegador en localhost:5000...")
    webbrowser.open(APP_URL)

if __name__ == "__main__":
    try:
        start_docker()
        start_docker_compose()
        if wait_for_app():
            open_browser()
    except Exception as e:
        log_error(traceback.format_exc())
        print("‚ùå Error inesperado. Revisa error_log.txt.")

input("Presiona Enter para salir...")